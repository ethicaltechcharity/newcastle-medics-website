@model Web.Models.TrialAssessmentViewModel

@{
    ViewBag.Title = "Trials Assessment";
}

<div class="container">

    <hr />
    <h2>@ViewBag.Title</h2>
    <h6>Use this form to assess how effectively a player completes a station at trials.</h6>
    <hr />

    @if (ViewBag.Saved != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @ViewBag.Saved
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @using (Html.BeginForm("TrialAssessment", "Skill", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group form-row">
            @Html.LabelFor(m => m.AssignedNumber, new { @class = "col-form-label col-8 col-md-3" })
            @Html.EditorFor(m => m.AssignedNumber, new { htmlAttributes = new { @class = "form-control col-4 col-md-2" } })
            @Html.ValidationMessageFor(m => m.AssignedNumber, "", new { @class = "text-danger col-12" })
        </div>

        <div class="form-group form-row">
            @Html.LabelFor(m => m.Drills, new { @class = "col-form-label col-5 col-md-3" })
            @Html.DropDownListFor(m => m.SelectedDrill, Model.Drills, "Select", new { @class = "form-control col-7 col-md-3" })
            @Html.ValidationMessageFor(m => m.SelectedDrill, "", new { @class = "text-danger col-12" })
        </div>

        <div class="form-group form-row">
            @Html.LabelFor(m => m.Ratings, new { @class = "col-form-label col-5 col-md-3" })
            @Html.DropDownListFor(m => m.SelectedRating, Model.Ratings, "Select", new { @class = "form-control col-7 col-md-3" })
            @Html.ValidationMessageFor(m => m.SelectedRating, "", new { @class = "text-danger col-12" })
        </div>

        <div class="form-group form-row">
            @Html.LabelFor(m => m.DateOfAssessment, new { @class = "col-form-label col-5 col-md-3" })
            <div class="col-7 col-md-3">
                @Html.EditorFor(m => m.DateOfAssessment, new { htmlAttributes = new { type = "date", @class = "date-picker form-control" } })
                <small class="text-muted">Only change if submitting after the session has finished.</small>
            </div>
            @Html.ValidationMessageFor(m => m.DateOfAssessment, "", new { @class = "text-danger" })
        </div>
        
        <div class="form-row">
            <button class="btn btn-default">Submit</button>
        </div>

    }
</div>

@section Scripts {
    <script>
        $('#AssignedNumber').val('');
    </script>
}
